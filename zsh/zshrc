## --------------
## instant prompt
## --------------
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

## -------------------------
## loading plugins via zap ⚡
## -------------------------
[ -f "$HOME/.local/share/zap/zap.zsh" ] && source "$HOME/.local/share/zap/zap.zsh"

# load these options before plugins
zstyle ':completion:*:descriptions' format '[%d]'
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*' menu no
zstyle ':completion::complete:make::' tag-order targets variables
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza --tree --level=2 --color=always $realpath'
zstyle ':fzf-tab:complete:kubectl:*' fzf-preview 'kubectl config view --minify -o jsonpath="{..context}" | jq -C'
zstyle ':fzf-tab:*' switch-group '<' '>'
zstyle ':fzf-tab:*' use-fzf-default-opts yes
zstyle :zsh-no-ps2: accept-line '.accept-line'
autoload -Uz compinit
if [ $(date +'%j') != $(/usr/bin/stat -f '%Sm' -t '%j' ${ZDOTDIR:-$HOME}/.zcompdump) ]; then
  compinit
else
  compinit -C
fi
unsetopt autocd
unalias -m '*'

plug "romkatv/powerlevel10k"
plug "desyncr/auto-ls"
export VI_MODE_ESC_INSERT="jj" && plug "zap-zsh/vim"
plug "kutsan/zsh-system-clipboard"
plug "Aloxaf/fzf-tab"
plug "zsh-users/zsh-autosuggestions"
plug "zdharma-continuum/fast-syntax-highlighting"
plug "hlissner/zsh-autopair"
plug "romkatv/zsh-no-ps2"
## -------------------------

# options to use vi-mode from command line
autoload -z edit-command-line
zle -N edit-command-line
bindkey -M vicmd ' ' edit-command-line
bindkey -M vicmd 'H' vi-beginning-of-line
bindkey -M vicmd 'L' vi-end-of-line
bindkey -M vicmd -s S ciw
bindkey -M vicmd -s E 5e
bindkey -M vicmd -s B 5b
bindkey -M vicmd Y zsh-system-clipboard-vicmd-vi-yank-eol

# exporting environment variables
export XDG_CONFIG_HOME="$HOME/.config"
export EDITOR="nvim"
export LANG=en_US.UTF-8
export LC_CTYPE="en_US.UTF-8"
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export FZF_DEFAULT_OPTS="\
	--reverse \
	--no-border \
	-e \
	--no-scrollbar \
	--height=50% \
	--no-info \
	--header-first \
	--separator=' ' \
	--padding=1 \
	--preview-window=right:50%:wrap \
	--bind shift-up:preview-up,shift-down:preview-down --bind ?:toggle-preview \
	--color=fg+:-1:regular,bg+:#073642,gutter:-1,border:#268bd2,separator:#2aa198,pointer:#cb4b16,hl:#268bd2,hl+:#268bd2 \
	--pointer=▶ \
	--marker=' '"
export FZF_DEFAULT_COMMAND="fd -H -t f -E '.git/'"
export NAVI_CONFIG="$HOME/.config/navi/config.yaml"
export LS_COLORS="$(vivid generate solarized-dark)"
export JQ_COLORS="2;37:0;33:0;33:0;35:0;36:1;30:2;37:0;34"
export GOPATH=$HOME/go
export GOBIN=$GOPATH/bin
export PATH=${PATH}:$GOBIN
typeset -U path
typeset -U manpath

# alias
alias ..="cd .."
alias -- -="cd -"
alias cut="gcut"
alias sed="gsed"
alias head="ghead"
alias ls="eza --tree --level=1 --sort='extension' --icons"
alias zenith="zenith -d 0 -n 0"
alias du="ncdu --show-percent --hide-graph --show-itemcount --color dark"
alias df="duf"
alias jd="json_diff"
alias env="list_env"
alias goenv="list_goenv"
alias src="exec zsh"
alias calc="insect"
alias :q="exit"
alias cheat="cht.sh --shell"
alias upgrade="brew upgrade && brew cleanup --prune=1 -s"
alias code="scc -c --no-cocomo"

## -----------------------
## additional source files
## -----------------------

# sourcing fzf custom functions
[ -f ~/.zshfun ] && source ~/.zshfun

# sourcing fzf keybindings
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

## --------
## bindkeys
## --------
bindkey -s '^p' 'clear\nfind_files\n'
bindkey -s '^t' 'clear\nfind_dir\n'
bindkey -s '^v' 'view **\t'
bindkey -s '^o' 'clear\nfind_git_files\n'
bindkey -s '^n' 'yazi\n'
bindkey -s '^h' 'search\n'
bindkey -s 'cc' 'conventional_commit\n'
bindkey -s 'cx' 'amend_commit\n'
eval "$(navi widget zsh)"
eval "$(zoxide init zsh)"
eval "$(uv generate-shell-completion zsh)"
