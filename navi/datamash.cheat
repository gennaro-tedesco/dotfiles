% datamash

# transpose file
datamash transpose < <filename>

# stats grouped by
: <filename>; datamash -t, -s -H -g <colGroupBy> count <colAggregate> min <colAggregate> max <colAggregate> mean <colAggregate> sstdev <colAggregate> < <filename> | (sed -u 1q;  sort -n -k1 -t,) | sed 's/GroupBy(\(\w*\))/\1/g' | sed 's/^,/ ,/' | column -t -s,  | bat --file-name <filename>

# validate shape of file
datamash -t, check < <filename>

# remove duplicates
datamash -H rmdup 1 < <filename>

# remove duplicates in column
: <filename>; datamash -t, -H rmdup <column> < <filename>

# count distinct
: <filename>; datamash -t, -s -H countunique <column> < <filename>

# count frequencies of values in column
: <filename>; datamash -t, -s -H -g <colGroupBy> count 1 < <filename> | (sed -u 1q; sort -t, -k2 -n -r) | sed 's/GroupBy(\(\w*\))/\1/g;s/(\w*)//g' | sed 's/^,/ ,/' | column -s, -t | bat --file-name <filename>

# pivot table
: <filename>; datamash -t, -s --header-in crosstab <colNr-colNr> < <filename> | sed 's/^,/ ,/;s/N\/A/0/g' | column -s, -t | bat --file-name <filename>

$ filename: ls *.csv | awk '{print $NF}'
$ column: xsv headers <filename> | awk '{print $2}'
